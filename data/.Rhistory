arrange_ggplot(o, p, tag_levels = list(c("o", "p")))
residualsR18_rust <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 9)
residualsR19_rust <-plot(gen_alphaR19,  which = c(2,5), labels = TRUE, var = 7)
residualsR20_rust <-plot(gen_alphaR20,  which = c(2,5), labels = TRUE, var = 7)
#Multi-trait stability index
#Lin e Binns' superiority index
out <- superiority(Rall_field, ENV, GEN, Rust)
#Annicchiarico's genotypic confidence index
Ann <- Annicchiarico(Rall_field,
env = ENV,
gen = GEN,
rep = REP,
resp = Rust)
Ann_selection <- Ann$Rust$general
#write.xlsx(Ann_selection, "Ann_selection.xlsx", sep = "/t")
}
#BLUPs correlations:
{
BLUP18_19 <- left_join(BLUP18,BLUP19, by = "GEN", suffix = c(".18", ".19"))
BLUP18_19_20 <- left_join(BLUP18_19,BLUP20, by = "GEN")
BLUP18_19_20_all <- left_join(BLUP18_19_20,BLUP_all, by = "GEN")
BLUPALL <- left_join(BLUP18_19_20_all,BLUPcc, by = "GEN")
BLUPALL_info <- left_join(BLUPALL,Panel_info, by = "GEN")
#write.xlsx(BLUPALL_info, "BLUP_ALL_info.xlsx", sep = "/t")
summary(BLUPALL_info)
corr_plot(BLUPALL, c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ))
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "parametric",
p.adjust.method = "holm"
)
}
#Correlations
#2018
corr_plot(BLUPALL_info, c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
col.by = Material)
#2019
material19 <- select(R19_nc, c(5,6,7))
material19 <- material19[1:322,1:3]
BLUP19 <- as.data.frame(get_model_data(gen_alphaR19, "blupg"))
BLUP19 <-cbind(BLUP19, material19)
corr_plot(BLUP19, GDD_F, GDD_P,GDD_M, Biom_plant_g, yield_plant_g, Rust, col.by = Material)
#2020
material20 <- select(R20_nc, c(5,6,7))
material20 <- material20[1:324,1:3]
BLUP20 <- as.data.frame(get_model_data(gen_alphaR20, "blupg"))
BLUP20 <-cbind(BLUP20, material20)
corr_plot(BLUP20, GDD_DTF, GDD_DTP,GDD_M, Biom_plant_g, yield_plant_g, Rust,Asco, Oidio, col.by = Material)
#Boxplots
#2018
ggbetweenstats(x = Material, y = Rust.18, data = BLUPALL_info,
p.adjust.method = "holm", type = "p",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
ggbetweenstats(x = Species, y = AUDPC_n, data = BLUPALL_info,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
#2019
ggbetweenstats(x = Material, y = Rust, data = BLUP19,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
ggbetweenstats(x = Structure, y = Rust, data = BLUP19,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
#2020
ggbetweenstats(x = Material, y = Rust, data = BLUP20,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
ggbetweenstats(x = Structure, y = Rust, data = BLUP20,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
#intento de pca
blups.pca <- prcomp(BLUPALL_info[,c(40:42)], center = TRUE,scale. = TRUE)
summary(blups.pca)
ggbiplot(blups.pca, groups = BLUPALL_info$Origen, ellipse = T)
BLUP18_19 <- left_join(BLUP18,BLUP19, by = "GEN", suffix = c(".18", ".19"))
BLUP18_19_20 <- left_join(BLUP18_19,BLUP20, by = "GEN")
BLUP18_19_20_all <- left_join(BLUP18_19_20,BLUP_all, by = "GEN")
BLUPALL <- left_join(BLUP18_19_20_all,BLUPcc, by = "GEN")
BLUPALL_info <- left_join(BLUPALL,Panel_info, by = "GEN")
#write.xlsx(BLUPALL_info, "BLUP_ALL_info.xlsx", sep = "/t")
summary(BLUPALL_info)
corr_plot(BLUPALL, c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ))
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "parametric",
p.adjust.method = "holm"
)
}
#Correlations
#2018
corr_plot(BLUPALL_info, c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
col.by = Material)
#2019
material19 <- select(R19_nc, c(5,6,7))
material19 <- material19[1:322,1:3]
BLUP19 <- as.data.frame(get_model_data(gen_alphaR19, "blupg"))
BLUP19 <-cbind(BLUP19, material19)
corr_plot(BLUP19, GDD_F, GDD_P,GDD_M, Biom_plant_g, yield_plant_g, Rust, col.by = Material)
#2020
material20 <- select(R20_nc, c(5,6,7))
material20 <- material20[1:324,1:3]
BLUP20 <- as.data.frame(get_model_data(gen_alphaR20, "blupg"))
BLUP20 <-cbind(BLUP20, material20)
corr_plot(BLUP20, GDD_DTF, GDD_DTP,GDD_M, Biom_plant_g, yield_plant_g, Rust,Asco, Oidio, col.by = Material)
#Boxplots
#2018
ggbetweenstats(x = Material, y = Rust.18, data = BLUPALL_info,
p.adjust.method = "holm", type = "p",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
ggbetweenstats(x = Species, y = AUDPC_n, data = BLUPALL_info,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
#2019
ggbetweenstats(x = Material, y = Rust, data = BLUP19,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
ggbetweenstats(x = Structure, y = Rust, data = BLUP19,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
#2020
ggbetweenstats(x = Material, y = Rust, data = BLUP20,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
ggbetweenstats(x = Structure, y = Rust, data = BLUP20,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
#intento de pca
blups.pca <- prcomp(BLUPALL_info[,c(40:42)], center = TRUE,scale. = TRUE)
summary(blups.pca)
ggbiplot(blups.pca, groups = BLUPALL_info$Origen, ellipse = T)
BLUP18_19 <- left_join(BLUP18,BLUP19, by = "GEN", suffix = c(".18", ".19"))
library(tidyverse)
BLUP18_19 <- left_join(BLUP18,BLUP19, by = "GEN", suffix = c(".18", ".19"))
BLUP18_19_20 <- left_join(BLUP18_19,BLUP20, by = "GEN")
BLUP18_19_20_all <- left_join(BLUP18_19_20,BLUP_all, by = "GEN")
BLUPALL <- left_join(BLUP18_19_20_all,BLUPcc, by = "GEN")
BLUPALL_info <- left_join(BLUPALL,Panel_info, by = "GEN")
#write.xlsx(BLUPALL_info, "BLUP_ALL_info.xlsx", sep = "/t")
summary(BLUPALL_info)
corr_plot(BLUPALL, c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ))
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "parametric",
p.adjust.method = "holm"
)
}
#Correlations
#2018
corr_plot(BLUPALL_info, c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
col.by = Material)
#2019
material19 <- select(R19_nc, c(5,6,7))
material19 <- material19[1:322,1:3]
BLUP19 <- as.data.frame(get_model_data(gen_alphaR19, "blupg"))
BLUP19 <-cbind(BLUP19, material19)
corr_plot(BLUP19, GDD_F, GDD_P,GDD_M, Biom_plant_g, yield_plant_g, Rust, col.by = Material)
#2020
material20 <- select(R20_nc, c(5,6,7))
material20 <- material20[1:324,1:3]
BLUP20 <- as.data.frame(get_model_data(gen_alphaR20, "blupg"))
BLUP20 <-cbind(BLUP20, material20)
corr_plot(BLUP20, GDD_DTF, GDD_DTP,GDD_M, Biom_plant_g, yield_plant_g, Rust,Asco, Oidio, col.by = Material)
#Boxplots
#2018
ggbetweenstats(x = Material, y = Rust.18, data = BLUPALL_info,
p.adjust.method = "holm", type = "p",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
ggbetweenstats(x = Species, y = AUDPC_n, data = BLUPALL_info,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
#2019
ggbetweenstats(x = Material, y = Rust, data = BLUP19,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
ggbetweenstats(x = Structure, y = Rust, data = BLUP19,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
#2020
ggbetweenstats(x = Material, y = Rust, data = BLUP20,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
ggbetweenstats(x = Structure, y = Rust, data = BLUP20,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
#intento de pca
blups.pca <- prcomp(BLUPALL_info[,c(40:42)], center = TRUE,scale. = TRUE)
summary(blups.pca)
ggbiplot(blups.pca, groups = BLUPALL_info$Origen, ellipse = T)
library(ggbiplot)
ggbiplot(blups.pca, groups = BLUPALL_info$Origen, ellipse = T)
ggbiplot(blups.pca, groups = BLUPALL_info$Species, ellipse = T)
#intento de pca
blups.pca <- prcomp(BLUPALL_info[,c(40:42)], center = TRUE,scale. = TRUE)
summary(blups.pca)
ggbiplot(blups.pca, groups = BLUPALL_info$Species, ellipse = T)
BLUPALL_info[,c(40:42)
BLUPALL_info
BLUPALL_info
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "np",
p.adjust.method = "holm"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "p",
p.adjust.method = "holm"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "robust",
p.adjust.method = "holm"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "np",
p.adjust.method = "bonferroni"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "p",
p.adjust.method = "bonferroni"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "robust",
p.adjust.method = "bonferroni"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "bayes",
p.adjust.method = "none"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "bayes",
p.adjust.method = "holm"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "np",
p.adjust.method = "none"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "np",
p.adjust.method = "hochberg"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "np",
p.adjust.method = "hommel"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "np",
p.adjust.method = "BH"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "np",
p.adjust.method = "BY"
)
corr_plot(BLUPALL_info, c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
col.by = Material)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust.18", "Rust.19", "Rust","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "np",
p.adjust.method = "BY"
)
RCC_nc <- #NoControls
read_excel("C:/Users/Salva/Documents/GitHub/Rust-collection/data/Rust_controlled_condition.xlsx",
sheet = "CC_n",
col_types =
c("text", #REP
"text", #BLOCK
"text", #GEN
"numeric", #L_area
"numeric", #L_aphila (0 = NO aphila; 1 = SI aphila)
"numeric", #L_border (0 = Liso; 0,5 = Semi; 1 = dentado)
"numeric", #AUDPC_n
"numeric", #PL50_n
"numeric", #IF_n
"numeric", #DS_n
"numeric", #IT_n
"numeric", #AUDPC_T square root
"numeric", #PL50_T log
"numeric", #IF_T square root
"numeric", #DS_T arc.sin
"numeric",
"numeric" #MDPr
))
library(readxl)
library(openxlsx)
library(metan)
library(ggstatsplot)
library(tidyverse)
library(GGEBiplots)
library(multcompView)
RCC_nc <- #NoControls
read_excel("C:/Users/Salva/Documents/GitHub/Rust-collection/data/Rust_controlled_condition.xlsx",
sheet = "CC_n",
col_types =
c("text", #REP
"text", #BLOCK
"text", #GEN
"numeric", #L_area
"numeric", #L_aphila (0 = NO aphila; 1 = SI aphila)
"numeric", #L_border (0 = Liso; 0,5 = Semi; 1 = dentado)
"numeric", #AUDPC_n
"numeric", #PL50_n
"numeric", #IF_n
"numeric", #DS_n
"numeric", #IT_n
"numeric", #AUDPC_T square root
"numeric", #PL50_T log
"numeric", #IF_T square root
"numeric", #DS_T arc.sin
"numeric",
"numeric" #MDPr
))
RCC_nc$REP <- as.factor(RCC_nc$REP)
RCC_nc$BLOCK <- as.factor(RCC_nc$BLOCK)
RCC_nc$GEN <- as.factor(RCC_nc$GEN)
gen_alphaRCC <-
gamem(RCC_nc,
GEN,
REP,
resp = c("AUDPC_T", "PL50_T", "IF_T", "IT_n", "DS_T", "MDPr"),
BLOCK)
#Genotypes Selection for rust resistance:
#FAI-BLUP:
FAI <- fai_blup(
gen_alphaRCC,
use_data = "blup",
DI = c("min", "max", "min", "min", "min", "min"),
UI = c("max", "min", "max", "max", "max", "max"),
SI = 15,
mineval = 1,
verbose = TRUE)
FAI$FAI
mgidi_index <- mgidi(gen_alphaRCC,
ideotype = c("l", "h", "l", "l","l", "l"),
SI = 10) # Selection intensity
mgidi_index$MGIDI
covcor1 <-  covcor_design(RCC_nc,
gen = GEN,
rep = REP ,
resp = c("AUDPC_n", "DS_n", "IF_n", "IT_n", "PL50_T", "MDPr"),
design = "RCBD")
SH <- Smith_Hazel(
gen_alphaRCC,
use_data = "blup",
pcov = covcor1$phen_cov,
gcov = covcor1$geno_cov,
SI = 15,
weights = rep(5, 1)
)
head(RCC_nc)
hist(RCC_nc$MDPr)
Rall_field <- #NoControls
read_excel("C:/Users/Salva/Documents/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/R18_19_20.xlsx",
sheet = "R_all",
col_types =
c("text", #ENV
"text", #REP
"text", #BLOCK
"numeric", #ROW
"text", #Specie
"text", #Material
"text", #Structure
"text", #GEN
"numeric", #GERM
"numeric", #GDD_F
"numeric", #GDD_P
"numeric", #Biom_pl_g
"numeric", #yield_pl_g
"numeric", #Rust
"numeric", #Asco
"numeric" #Oidio
))
head(Rall_field)
#Multi-trait stability index
#Lin e Binns' superiority index
out <- superiority(Rall_field, ENV, GEN, Rust)
#write.xlsx(SH_selection, "SH_selection.xlsx", sep = "/t")
#Lin-BINN superiority index:
superiority(Rall_field,
env = ENV, gen = GEN, resp = Rust)
dim(Rall_field)
is.na(Rall_field$Rust)
#write.xlsx(SH_selection, "SH_selection.xlsx", sep = "/t")
#Lin-BINN superiority index:
read.xlsx("C:/Users/Salva/Documents/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/field_data_scaled.xlsx")
#write.xlsx(SH_selection, "SH_selection.xlsx", sep = "/t")
#Lin-BINN superiority index:
Rall_field <- read.xlsx("C:/Users/Salva/Documents/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/field_data_scaled.xlsx")
superiority(Rall_field,
env = ENV, gen = GEN, resp = Rust)
lin&binn <- superiority(Rall_field,
env = ENV, gen = GEN, resp = Rust)
linbinn <- superiority(Rall_field,
env = ENV, gen = GEN, resp = Rust)
linbinn$Rust$index
indices <- data.frame(linbinn$Rust$index, FAI$FAI, mgidi_index$MGIDI)
head(indices)
setwd("~/GitHub/Rust-collection/data")
write.xlsx(indices, "indices.xlsx")
