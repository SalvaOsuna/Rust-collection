}
#Analysis of single environment/experiment using mixed-models
library("metan")
gen_alphaR18 <-
gamem(R18_nc,
GEN,
REP,
resp = c("GERM", "DtF", "DtP", "GDD_F", "GDD_P", "Biom_plant_g", "yield_plant_g", "Asco", "Rust", "Oidio"),
BLOCK)
BLUP18 <- get_model_data(gen_alphaR18, what = "blupg")
get_model_data(gen_alphaR18)
get_model_data(gen_alphaR18, "lrt")
get_model_data(gen_alphaR18, "details")
gen_alphaR19 <-
gamem(R19_nc,
GEN,
REP,
resp = c("GERM", "GDD_FF", "GDD_F", "GDD_FP", "GDD_P","GDD_M", "Rust", "Biom_plant_g", "yield_plant_g"),
BLOCK)
BLUP19 <- get_model_data(gen_alphaR19, what = "blupg")
View(BLUP18)
get_model_data(gen_alphaR19)
get_model_data(gen_alphaR19, "lrt")
get_model_data(gen_alphaR19, "details")
gen_alphaR20 <-
gamem(R20_nc,
GEN,
REP,
resp = c("GERM", "GDD_DTFF", "GDD_DTF", "GDD_DTFP", "GDD_DTP", "GDD_M", "Rust", "Asco", "Oidio", "Biom_plant_g", "yield_plant_g"),
BLOCK)
BLUP20 <- get_model_data(gen_alphaR20, what = "blupg")
get_model_data(gen_alphaR20)
gen_alphaRCC <-
gamem(RCC_nc,
GEN,
REP,
resp = c("AUDPC_n","PL50_n", "DS_n", "IF_n", "IT_n"),
BLOCK)
BLUPcc <- get_model_data(gen_alphaRCC, what = "blupg")
corr_plot(RCC_nc, c("AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n"))
corr_plot(BLUPcc, c("AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n"))
get_model_data(gen_alphaRCC)
#Genotypes Selection for rust resistance:
FAI <- fai_blup(
gen_alphaRCC,
use_data = "blup",
DI = c("min", "max", "min", "min", "min"),
UI = c("max", "min", " max", "max", "max"),
SI = 15,
mineval = 1,
verbose = TRUE)
#Genotypes Selection for rust resistance:
FAI <- fai_blup(
gen_alphaRCC,
use_data = "blup",
DI = c("min", "max", "min", "min", "min"),
UI = c("max", "min", " max", "max", "max"),
SI = 15,
mineval = 1,
verbose = TRUE)
get_model_data(gen_alphaRCC)
FAI <- fai_blup(
gen_alphaRCC,
use_data = "blup",
DI = c("min", "max", "min", "min", "min"),
UI = c("max", "min", " max", "max", "max"),
SI = 15,
mineval = 1,
verbose = TRUE)
gen_alphaRCC
#Genotypes Selection for rust resistance:
FAI <- fai_blup(
gen_alphaRCC,
use_data = "blup",
DI = c("min", "max", "min", "min", "min"),
UI = c("max", "min", " max", "max", "max"),
SI = 15,
mineval = 1,
verbose = TRUE)
#Genotypes Selection for rust resistance:
FAI <- fai_blup(
gen_alphaRCC,
use_data = "blup",
DI = c("min", "max", "min", "min", "min"),
UI = c("max", "min", " max", "max", "max"),
SI = 15,
mineval = 1,
verbose = TRUE)
#Genotypes Selection for rust resistance:
FAI <- fai_blup(
gen_alphaRCC,
use_data = "blup",
DI = c("min", "max", "min", "min", "min"),
UI = c("max", "min", "max", "max", "max"),
SI = 15,
mineval = 1,
verbose = TRUE)
FAI$FAI
FAI_selection <- FAI$FAI
library(openxlsx)
write.xlsx(FAI_selection, "FAI_selection.xlsx", sep = "/t")
{
RCC_nc <- #NoControls
read_excel("C:/Users/Salva/Documents/GitHub/Rust-collection/data/Rust_controlled_condition.xlsx",
sheet = "CC_n",
col_types =
c("text", #REP
"text", #BLOCK
"text", #GEN
"numeric", #L_area
"numeric", #L_aphila (0 = NO aphila; 1 = SI aphila)
"numeric", #L_border (0 = Liso; 0,5 = Semi; 1 = dentado)
"numeric", #AUDPC_n
"numeric", #GPL50_n
"numeric", #IF_n
"numeric", #DS_n
"numeric" #IT_n
))
RCC_nc$REP <- as.factor(RCC_nc$REP)
RCC_nc$BLOCK <- as.factor(RCC_nc$BLOCK)
RCC_nc$GEN <- as.factor(RCC_nc$GEN)
}
gen_alphaRCC <-
gamem(RCC_nc,
GEN,
REP,
resp = c("AUDPC_n","PL50_n", "DS_n", "IF_n", "IT_n"),
BLOCK)
BLUPcc <- get_model_data(gen_alphaRCC, what = "blupg")
corr_plot(RCC_nc, c("AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n"))
corr_plot(BLUPcc, c("AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n"))
#Genotypes Selection for rust resistance:
FAI <- fai_blup(
gen_alphaRCC,
use_data = "blup",
DI = c("min", "max", "min", "min", "min"),
UI = c("max", "min", "max", "max", "max"),
SI = 15,
mineval = 1,
verbose = TRUE)
FAI_selection <- FAI$FAI
write.xlsx(FAI_selection, "FAI_selection.xlsx", sep = "/t")
gen_alphaRCC_noLP <-
gamem(RCC_nc,
GEN,
REP,
resp = c("AUDPC_n", "DS_n", "IF_n", "IT_n"),
BLOCK)
FAI_noLP <- fai_blup(
gen_alphaRCC_noLP,
use_data = "blup",
DI = c("min","min", "min", "min"),
UI = c("max", "max", "max", "max"),
SI = 15,
mineval = 1,
verbose = TRUE)
FAI_selection1 <- FAI_noLP$FAI
write.xlsx(FAI_selection1, "FAI_selection1.xlsx", sep = "/t")
mgidi_index <- mgidi(gen_alphaRCC,
ideotype = c("l", "h", "l", "l","l"),
SI = 20) # Selection intensity
plot(mgidi_index, type = "contribution")
mgidi_index <- mgidi(gen_alphaRCC,
ideotype = c("l", "h", "l", "l","l"),
SI = 10) # Selection intensity
plot(mgidi_index, type = "contribution")
mgidi_index_noLP <- mgidi(gen_alphaRCC_noLP,
ideotype = c("l", "l", "l","l"),
SI = 10) # Selection intensity
arrange_ggplot(p1, p2)
p1 <- plot(mgidi_index, type = "contribution")
p2 <- plot(mgidi_index_noLP, type = "contribution")
arrange_ggplot(p1, p2)
mgidi_index$MGIDI
MGIDI_selection <- mgidi_index$MGIDI
MGIDI_selection1 <- mgidi_index_noLP$MGIDI
write.xlsx(MGIDI_selection, "MGIDI_selection.xlsx", sep = "/t")
write.xlsx(MGIDI_selection1, "MGIDI_selection1.xlsx", sep = "/t")
covcor_design(RCC_nc,
gen = GEN,
rep = REP ,
resp = c("AUDPC_n", "PL50_n","DS_n", "IF_n", "IT_n"),
design = "RCBD")
covcor1 <-  covcor_design(RCC_nc,
gen = GEN,
rep = REP ,
resp = c("AUDPC_n", "PL50_n","DS_n", "IF_n", "IT_n"),
design = "RCBD")
Smith_Hazel(
gen_alphaRCC,
use_data = "blup",
pcov = covcor1$phen_cov,
gcov = covcor1$geno_cov,
SI = 15,
weights = NULL
)
covcor1 <-  covcor_design(RCC_nc,
gen = GEN,
rep = REP ,
resp = c("AUDPC_n", "DS_n", "IF_n", "IT_n"),
design = "RCBD")
Smith_Hazel(
gen_alphaRCC,
use_data = "blup",
pcov = covcor1$phen_cov,
gcov = covcor1$geno_cov,
SI = 15,
weights = NULL
)
SH <- Smith_Hazel(
gen_alphaRCC,
use_data = "blup",
pcov = covcor1$phen_cov,
gcov = covcor1$geno_cov,
SI = 15,
weights = NULL
)
SH$sel_gen
SH$index
SH_selection <- SH$index
write.xlsx(SH_selection, "SH_selection.xlsx", sep = "/t")
#Comparison of the genotype selected:
coincidence <- coincidence_index(mgidi_index_noLP, FAI_noLP, SH, total = 13)
mgidi_index_noLP <- mgidi(gen_alphaRCC_noLP,
ideotype = c("l", "l", "l","l"),
SI = 15) # Selection intensity
#Comparison of the genotype selected:
coincidence <- coincidence_index(mgidi_index_noLP, FAI_noLP, SH, total = 13)
coincidence
SH <- Smith_Hazel(
gen_alphaRCC,
use_data = "blup",
pcov = covcor1$phen_cov,
gcov = covcor1$geno_cov,
SI = 15,
weights = rep(1, 4)
)
covcor1$phen_cov
SH <- Smith_Hazel(
gen_alphaRCC,
use_data = "blup",
pcov = covcor1$phen_cov,
gcov = covcor1$geno_cov,
SI = 15,
weights = rep(1, 5)
)
SH <- Smith_Hazel(
gen_alphaRCC,
use_data = "blup",
pcov = covcor1$phen_cov,
gcov = covcor1$geno_cov,
SI = 15,
weights = rep(5, 1)
)
#Multi-trait stability index
#Based on stability only
MTSI_index <- Rall_field %>%
waasb(ENV, GEN, REP,
resp = "Rust") %>%
mtsi(verbose = FALSE, index = "waasb")
MTSI_index <- Rall_field %>%
waasb(ENV, GEN, REP,
resp = "Rust") %>%
mtsi(verbose = FALSE, index = "waasb")
MTSI_index <- Rall_field %>%
waasb(ENV, GEN, REP,
resp = Rust) %>%
mtsi(verbose = FALSE, index = "waasb")
MTSI_index2 <-
Rall_field %>%
waasb(ENV, GEN, REP,
resp = Rust,
mresp = "l",
wresp = 65) %>% # Default is 50
mtsi(SI = 20)
#Multi-trait stability index
#Lin e Binns' superiority index
out <- superiority(Rall_field, ENV, GEN, Rust)
out
#Annicchiarico's genotypic confidence index
Ann <- Annicchiarico(Rall_field,
env = ENV,
gen = GEN,
rep = REP,
resp = Rust)
Ann
Ann$Rust$general
Ann_selection <- Ann$Rust$general
write.xlsx(Ann_selection, "Ann_selection.xlsx", sep = "/t")
#BLUPs
mixed_mod_Rall_field <-
gamem_met(Rall_field,
ENV,
GEN,
REP,
resp = c("GERM", "GDD_F", "GDD_P", "Rust", "Biom_plant_g", "yield_plant_g"),
block = BLOCK
)
mixed_mod_Rall_field$Rust$BLUPgen
BLUP_all <- mixed_mod_Rall_field$Rust$BLUPgen
write.xlsx(BLUP_all, "BLUP_all.xlsx", sep = "/t")
BLUP18 <- get_model_data(gen_alphaR18, what = "blupg")
write.xlsx(BLUP18, "BLUP18.xlsx", sep = "/t")
gen_alphaR18$Rust$BLUPgen
BLUP19 <- get_model_data(gen_alphaR19, what = "blupg")
write.xlsx(BLUP19, "BLUP19.xlsx", sep = "/t")
gen_alphaR18 <-
gamem(R18_nc,
GEN,
REP,
resp = c("GERM", "DtF", "DtP", "GDD_F", "GDD_P", "Biom_plant_g", "yield_plant_g", "Asco", "Rust", "Oidio"),
BLOCK)
BLUP18 <- get_model_data(gen_alphaR18, what = "blupg")
write.xlsx(BLUP18, "BLUP18.xlsx", sep = "/t")
write.xlsx(BLUP18, "BLUP18.xlsx", sep = "/t")
R18_nc <- read_excel("C:/Users/Salva/Documents/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/R18_19_20.xlsx",
sheet = "R18_nc",
col_types =
c("text", #ENV
"text", #REP
"text", #BLOCK
"numeric", #ROW
"text", #Specie
"text", #Material
"text", #Structure
"numeric", #GEN
"numeric", #GERM
"numeric", #DtF
"numeric", #DtP
"numeric", #GDD_F
"numeric", #GDD_P
"numeric", #biomass_pl
"numeric", #yield_pl
"numeric", #Asco
"numeric", #Rust
"numeric" #Oidio
))
gen_alphaR18 <-
gamem(R18_nc,
GEN,
REP,
resp = c("GERM", "DtF", "DtP", "GDD_F", "GDD_P", "Biom_plant_g", "yield_plant_g", "Asco", "Rust", "Oidio"),
BLOCK)
BLUP18 <- get_model_data(gen_alphaR18, what = "blupg")
write.xlsx(BLUP18, "BLUP18.xlsx", sep = "/t")
BLUP18 <- get_model_data(gen_alphaR18, what = "blupg")
write.xlsx(BLUP18, "BLUP18.xlsx", sep = "/t")
{
R18_nc <- read_excel("C:/Users/Salva/Documents/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/R18_19_20.xlsx",
sheet = "R18_nc",
col_types =
c("text", #ENV
"text", #REP
"text", #BLOCK
"numeric", #ROW
"text", #Specie
"text", #Material
"text", #Structure
"numeric", #GEN
"numeric", #GERM
"numeric", #DtF
"numeric", #DtP
"numeric", #GDD_F
"numeric", #GDD_P
"numeric", #biomass_pl
"numeric", #yield_pl
"numeric", #Asco
"numeric", #Rust
"numeric" #Oidio
))
R18_nc$ENV <- as.factor(R18_nc$ENV)
R18_nc$REP <- as.factor(R18_nc$REP)
R18_nc$BLOCK <- as.factor(R18_nc$BLOCK)
R18_nc$ROW <- as.factor(R18_nc$ROW)
R18_nc$Material <- as.factor(R18_nc$Material)
R18_nc$Species <- as.factor(R18_nc$Species)
R18_nc$Structure <- as.factor(R18_nc$Structure)
R18_nc$GEN <- as.factor(R18_nc$GEN)
}
#Three field Seasons together. Data from multi-environment trials
{
Rall_field <- #NoControls
read_excel("C:/Users/Salva/Documents/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/R18_19_20.xlsx",
sheet = "R_all",
col_types =
c("text", #ENV
"text", #REP
"text", #BLOCK
"numeric", #ROW
"text", #Specie
"text", #Material
"text", #Structure
"text", #GEN
"numeric", #GERM
"numeric", #GDD_F
"numeric", #GDD_P
"numeric", #Biom_pl_g
"numeric", #yield_pl_g
"numeric", #Rust
"numeric", #Asco
"numeric" #Oidio
))
Rall_field$ENV <- as.factor(Rall_field$ENV)
Rall_field$REP <- as.factor(Rall_field$REP)
Rall_field$BLOCK <- as.factor(Rall_field$BLOCK)
Rall_field$ROW <- as.factor(Rall_field$ROW)
Rall_field$Material <- as.factor(Rall_field$Material)
Rall_field$Species <- as.factor(Rall_field$Species)
Rall_field$Structure <- as.factor(Rall_field$Structure)
Rall_field$GEN <- as.factor(Rall_field$GEN)
}
gen_alphaR18 <-
gamem(R18_nc,
GEN,
REP,
resp = c("GERM", "DtF", "DtP", "GDD_F", "GDD_P", "Biom_plant_g", "yield_plant_g", "Asco", "Rust", "Oidio"),
BLOCK)
{
stat18 <- desc_stat(R18_nc, stats = "all")
gen_alphaR18 <-
gamem(R18_nc,
GEN,
REP,
resp = c("GERM", "DtF", "DtP", "GDD_F", "GDD_P", "Biom_plant_g", "yield_plant_g", "Asco", "Rust", "Oidio"),
BLOCK)
BLUP18 <- get_model_data(gen_alphaR18, what = "blupg")
write.xlsx(BLUP18, "BLUP18.xlsx", sep = "/t")
get_model_data(gen_alphaR18)
get_model_data(gen_alphaR18, "lrt")
get_model_data(gen_alphaR18, "details")
}
gen_alphaR19 <-
gamem(R19_nc,
GEN,
REP,
resp = c("GERM", "GDD_FF", "GDD_F", "GDD_FP", "GDD_P","GDD_M", "Rust", "Biom_plant_g", "yield_plant_g"),
BLOCK)
gen_alphaR20 <-
gamem(R20_nc,
GEN,
REP,
resp = c("GERM", "GDD_DTFF", "GDD_DTF", "GDD_DTFP", "GDD_DTP", "GDD_M", "Rust", "Asco", "Oidio", "Biom_plant_g", "yield_plant_g"),
BLOCK)
#BLUPs
mixed_mod_Rall_field <-
gamem_met(Rall_field,
ENV,
GEN,
REP,
resp = c("GERM", "GDD_F", "GDD_P", "Rust", "Biom_plant_g", "yield_plant_g"),
block = BLOCK
)
BLUP18 <- get_model_data(gen_alphaR18, what = "blupg")
BLUP19 <- get_model_data(gen_alphaR19, what = "blupg")
BLUP20 <- get_model_data(gen_alphaR20, what = "blupg")
BLUPcc <- get_model_data(gen_alphaRCC, what = "blupg")
BLUPgen_all <- mixed_mod_Rall_field$Rust$BLUPgen
mixed_mod_Rall_field$Rust$BLUPint
mixed_mod_Rall_field$Rust$BLUPgen
BLUPgen_all <- mixed_mod_Rall_field$Rust$BLUPgen
mixed_mod_Rall_field$Rust$MeansGxE
BLUP18_19 <- left_join(BLUP18,BLUP19, by = "GEN")
library(tidyverse)
BLUP18_19 <- left_join(BLUP18,BLUP19, by = "GEN")
BLUP18_19_20 <- left_join(BLUP18_19,BLUP20, by = "GEN")
BLUP18_19_20_all <- left_join(BLUP18_19_20,BLUPgen_all, by = "GEN")
BLUPALL <- left_join(BLUP18_19_20_all,BLUPcc, by = "GEN")
View(BLUPALL)
corr_plot(BLUPALL, c("Rust", "Rust.x", "Rust.y","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ))
library(ggstatsplot)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust", "Rust.x", "Rust.y","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#B2182B", "white", "#4D4D4D"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "nonparametric"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust", "Rust.x", "Rust.y","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "nonparametric"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust", "Rust.x", "Rust.y","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "robust"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust", "Rust.x", "Rust.y","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "robust",
p.adjust.method = "bonferroni"
)
ggcorrmat(
data     = BLUPALL,
cor.vars = c("Rust", "Rust.x", "Rust.y","Predicted","AUDPC_n", "PL50_n", "IF_n", "DS_n", "IT_n" ),
colors   = c("#cbac43", "white", "#550000"),
title    = "Correlalogram",
subtitle = "This is the subtitle",
type = "nonparametric",
p.adjust.method = "bonferroni"
)
