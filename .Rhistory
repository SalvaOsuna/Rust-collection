residual_GERM <- plot(gen_alphaR18)
View(gen_alphaR18)
plot(gen_alphaR18)
residual_GERM <- plot(gen_alphaR18,  which = 2,
labels = TRUE))
plot(gen_alphaR18,  which = 2,
labels = TRUE))
plot(gen_alphaR18,  which = 2, labels = TRUE))
plot(gen_alphaR18,  which = 2, labels = TRUE)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = GERM)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 2)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = c(1,4,5,6,7,9,10,11))
b <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
b <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
a <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
b <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
c <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 5)
d <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 6)
e <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 7)
f <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 8)
g <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 9)
h <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 10)
i <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 11)
arrange_ggplot(a, b, tag_levels = "a")
a
b
c
d
e
f
g
h
i
#season 2018
R18_nc <- read_excel("C:/Users/Salva/Documents/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/R18_19_20.xlsx",
sheet = "R18_nc",
col_types =
c("text", #ENV
"text", #REP
"text", #BLOCK
"numeric", #ROW
"text", #GEN
"numeric", #GERM
"numeric", #DtF
"numeric", #DtP
"numeric", #GDD_F
"numeric", #GDD_P
"numeric", #biomass_pl
"numeric", #yield_pl
"numeric", #yield_KgHa
"numeric", #Asco_adj
"numeric", #Rust
"numeric", #Rust_adj
"numeric" #Oidio
))
R18_nc$ENV <- as.factor(R18_nc$ENV)
R18_nc$REP <- as.factor(R18_nc$REP)
R18_nc$BLOCK <- as.factor(R18_nc$BLOCK)
R18_nc$ROW <- as.factor(R18_nc$ROW)
R18_nc$GEN <- as.factor(R18_nc$GEN)
inspect(R18_nc, plot = FALSE)
gen_alphaR18 <-
gamem(R18_nc,
GEN,
REP,
resp = c("GERM", "DtF", "DtP", "GDD_F", "GDD_P", "Biom_plant_g", "yield_plant_g", "Asco_Adj", "Rust", "Rust_adj", "Oidio"),
BLOCK)
get_model_data(gen_alphaR18, "details")
get_model_data(gen_alphaR18, "lrt")
get_model_data(gen_alphaR18, "genpar") %>%
print()
ResiGERM <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
ResiFlowering <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
ResiPoding <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 5)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 6)
ResiBiom <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 6)
ResiYield <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 7)
ResiAsco <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 8)
ResiRust <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 9)
ResiGERM <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
ResiFlowering <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
ResiPoding <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 5)
ResiBiom <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 6)
ResiYield <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 7)
ResiAsco <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 8)
ResiRust <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 9)
ResiRustAdj <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 10)
ResiOidio <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 11)
ResiGERM <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
ResiFlowering <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
ResiPoding <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 5)
ResiBiom <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 6)
ResiYield <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 7)
ResiAsco <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 8)
ResiRust <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 9)
ResiRustAdj <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 10)
ResiOidio <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 11)
par(mfrow = c(9,1))
ResiGERM <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
ResiFlowering <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
ResiPoding <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 5)
ResiBiom <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 6)
ResiYield <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 7)
ResiAsco <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 8)
ResiRust <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 9)
ResiRustAdj <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 10)
ResiOidio <- plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 11)
par(mfrow = c(9,1))
ResiGERM
ResiFlowering
ResiPoding
ResiBiom
ResiYield
ResiAsco
ResiRust
ResiRustAdj
ResiOidio
knitr::opts_chunk$set(echo = TRUE)
##BLUP histogram for phenology in 2018 season:
par(mfrow = c(4,2))
hist(gen_alpha$GDD_DTFF$BLUPgen$Predicted , main = "BLUP distribution of GDD_DTFF")
par(mfrow = c(2,1))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
# Check if it is neccesary install the packages
list.of.packages <- c("tidyverse",
"ggpubr",
"ggstatsplot",
"openintro",
"rstatix",
"DescTools",
"WRS2",
"metan")
new.packages <- list.of.packages[!(list.of.packages %in%
installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse) # manipulation and data visualization
library(ggpubr) # dummy graphs
library(ggstatsplot) # fancy graphs
library(rstatix) # tests P/NP
library(DescTools) #Yuen robust test
library(WRS2) # robust effect size
library(metan) #to rid the alpha lattice design
library(openxlsx)#read excel files
library(readxl)
#season 2018
R18_nc <- read_excel("C:/Users/Salva/Documents/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/R18_19_20.xlsx",
sheet = "R18_nc",
col_types =
c("text", #ENV
"text", #REP
"text", #BLOCK
"numeric", #ROW
"text", #GEN
"numeric", #GERM
"numeric", #DtF
"numeric", #DtP
"numeric", #GDD_F
"numeric", #GDD_P
"numeric", #biomass_pl
"numeric", #yield_pl
"numeric", #yield_KgHa
"numeric", #Asco_adj
"numeric", #Rust
"numeric", #Rust_adj
"numeric" #Oidio
))
R18_nc$ENV <- as.factor(R18_nc$ENV)
R18_nc$REP <- as.factor(R18_nc$REP)
R18_nc$BLOCK <- as.factor(R18_nc$BLOCK)
R18_nc$ROW <- as.factor(R18_nc$ROW)
R18_nc$GEN <- as.factor(R18_nc$GEN)
inspect(R18_nc, plot = FALSE)
par(mfrow = c(4,2))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 6)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 7)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 8)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 9)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 10)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 11)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 6)
par(mar = c(4, 4, .1, .1))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
par(mar = c(4, 4, .1, .1))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 5)
par(mar = c(4, 4, .1, .1))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
par(mar = c(4, 4, .1, .1))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 5)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 6)
par(mar = c(4, 4, .1, .1))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 7)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 8)
par(mar = c(4, 4, .1, .1))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 9)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 11)
par(mar = c(4, 4))
par(mfrow=c(1,2))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 5)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 6)
par(mfrow=c(1,2))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 7)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 8)
par(mfrow=c(1,2))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 9)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 11)
par(mar = c(4, 2,))
par(mar = c(4, 2))
par(mar = c(2, 2))
par(mfrow=c(1,2))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
par(mfrow=c(1,2))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 5)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 6)
par(mfrow=c(1,2))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 7)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 8)
par(mfrow=c(1,2))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 9)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 11)
corr_plot(gen_alphaR18)
corr_plot(gen_alphaR18)
get_model_data(gen_alphaR18, "blupg")
BLUP18 <- as.data.frame(get_model_data(gen_alphaR18, "blupg"))
corr_plot(BLUP18)
BLUP18 <- as.data.frame(get_model_data(gen_alphaR18, "blupg"))
corr_plot(BLUP18, GDD_F, GDD_P, Biom_plant_g, yield_plant_g, Asco_adj, Rust, Oidio)
BLUP18 <- as.data.frame(get_model_data(gen_alphaR18, "blupg"))
corr_plot(BLUP18, GDD_F, GDD_P, Biom_plant_g, yield_plant_g, Asco_Adj, Rust, Oidio)
BLUP18 <- as.data.frame(get_model_data(gen_alphaR18, "blupg"))
corr_plot(BLUP18, GDD_F, GDD_P, Biom_plant_g, yield_plant_g, Asco_Adj, Rust, Oidio)
#season 2018
R18_nc <- read_excel("C:/Users/Salva/Documents/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/R18_19_20.xlsx",
sheet = "R18_nc",
col_types =
c("text", #ENV
"text", #REP
"text", #BLOCK
"numeric", #ROW
"text", #Material
"text", #Specie
"text", #GEN
"numeric", #GERM
"numeric", #DtF
"numeric", #DtP
"numeric", #GDD_F
"numeric", #GDD_P
"numeric", #biomass_pl
"numeric", #yield_pl
"numeric", #yield_KgHa
"numeric", #Asco_adj
"numeric", #Rust
"numeric", #Rust_adj
"numeric" #Oidio
))
R18_nc$ENV <- as.factor(R18_nc$ENV)
R18_nc$REP <- as.factor(R18_nc$REP)
R18_nc$BLOCK <- as.factor(R18_nc$BLOCK)
R18_nc$ROW <- as.factor(R18_nc$ROW)
R18_nc$Material <- as.factor(R18_nc$Material)
R18_nc$Specie <- as.factor(R18_nc$Specie)
R18_nc$GEN <- as.factor(R18_nc$GEN)
BLUP18 <- as.data.frame(get_model_data(gen_alphaR18, "blupg"))
corr_plot(BLUP18, GDD_F, GDD_P, Biom_plant_g, yield_plant_g, Asco_Adj, Rust, Oidio, by = Material)
BLUP18 <- as.data.frame(get_model_data(gen_alphaR18, "blupg"))
corr_plot(R18_nc, GDD_F, GDD_P, Biom_plant_g, yield_plant_g, Asco_Adj, Rust, Oidio, by = Material)
corr_plot(R18_nc, GDD_F, GDD_P, Biom_plant_g, yield_plant_g, Asco_Adj, Rust, Oidio, col.by = Material)
corr_plot(R18_nc, GDD_F, GDD_P, Biom_plant_g, yield_plant_g, Asco_Adj, Rust, Oidio, col.by = Material, diag.type = "boxplot")
corr_plot(BLUP18, GDD_F, GDD_P, Biom_plant_g, yield_plant_g, Asco_Adj, Rust, Oidio)
select_(R18_nc, Material)
select_(R18_nc, "Material")
material <- select_(R18_nc, "Material")
material[323,]
material[1:323]
material(1:323)
material[1:323,]
inner_join(BLUP18, material[1:323,])
material <- material[1:323,]
inner_join(material, BLUP18)
inner_join(BLUP18, material)
inner_join(BLUP18, as.numeric(material))
inner_join(BLUP18, as.text(material))
cbind(BLUP18, material)
corr_plot(BLUP18, GDD_F, GDD_P, Biom_plant_g, yield_plant_g, Asco_Adj, Rust, Oidio, col.by = Material)
BLUP18 <-cbind(BLUP18, material)
corr_plot(BLUP18, GDD_F, GDD_P, Biom_plant_g, yield_plant_g, Asco_Adj, Rust, Oidio, col.by = Material)
material <- select_(R18_nc, "Material")
material <- material[1:323,]
BLUP18 <- as.data.frame(get_model_data(gen_alphaR18, "blupg"))
BLUP18 <-cbind(BLUP18, material)
corr_plot(BLUP18, GDD_F, GDD_P, Biom_plant_g, yield_plant_g, Asco_Adj, Rust, Oidio, col.by = Material)
ggplot(BLUP18, aes(x=Specie, y=Rust, group=Specie)) +
geom_boxplot(aes(fill=Specie))
material <- select_(R18_nc, "Material"&"Specie")
material <- select_(R18_nc, c("Material","Specie"))
material[1:323,]
material[1:323,1:2]
material
material <- select_(R18_nc, c("Material","Specie"))
material
R18_nc
material <- select_(R18_nc, c("Material","Specie"))
material <- select_(R18_nc, c(5,6))
material <- material[1:323,1:2]
material
material <- select_(R18_nc, c(5,6))
material
material <- select(R18_nc, c(5,6))
material
material <- material[1:323,1:2]
BLUP18 <-cbind(BLUP18, material)
BLUP18 <- as.data.frame(get_model_data(gen_alphaR18, "blupg"))
BLUP18 <-cbind(BLUP18, material)
ggplot(BLUP18, aes(x=Specie, y=Rust, group=Specie)) +
geom_boxplot(aes(fill=Specie))
ggbetweenstats(
x     = Specie,
y     = Rust,
title = c("Distribution of Rust across Species")
)
ggbetweenstats(data = BLUP18,
x     = Specie,
y     = Rust,
title = c("Distribution of Rust across Species")
)
ggbetweenstats(x = Specie, y = Rust, data = BLUP18, p.adjust.method = "bonferroni",
bf.message = FALSE, var.equal = TRUE,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8) )
ggbetweenstats(x = Specie, y = Rust, data = BLUP18,
p.adjust.method = "bonferroni",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8) )
ggbetweenstats(x = Specie, y = Rust, data = BLUP18,
p.adjust.method = "none",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8) )
ggbetweenstats(x = Specie, y = Rust, data = BLUP18,
p.adjust.method = "bonferroni", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8) )
ggbetweenstats(x = Specie, y = Oidio, data = BLUP18,
p.adjust.method = "bonferroni", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8) )
ggbetweenstats(x = Specie, y = Asco_Adj, data = BLUP18,
p.adjust.method = "bonferroni", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8) )
ggbetweenstats(x = Material, y = Asco_Adj, data = BLUP18,
p.adjust.method = "bonferroni", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8) )
ggbetweenstats(x = Material, y = Rust, data = BLUP18,
p.adjust.method = "bonferroni", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8) )
ggbetweenstats(x = Material, y = Rust_adj, data = BLUP18,
p.adjust.method = "bonferroni", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8) )
ggbetweenstats(x = Material, y = Rust_adj, data = BLUP18,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8) )
ggbetweenstats(x = Material, y = Rust, data = BLUP18,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
#season 2019
R19_nc <- read_excel("C:/Users/Salva/Documents/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/R18_19_20.xlsx",
sheet = "R19_nc",
col_types =
c("text", #ENV
"text", #REP
"text", #BLOCK
"numeric", #ROW
"text", #Material
"text", #Specie
"text", #GEN
"numeric", #GERM
"numeric", #GDD_FF
"numeric", #GDD_F
"numeric", #GDD_FP
"numeric", #GDD_P
"numeric", #GDD_M
"numeric", #Rust
"numeric", #Rust_adj
"numeric", #Biom_pl_g
"numeric" #yield_pl_g
))
R19_nc$ENV <- as.factor(R19_nc$ENV)
R19_nc$REP <- as.factor(R19_nc$REP)
R19_nc$BLOCK <- as.factor(R19_nc$BLOCK)
R19_nc$ROW <- as.factor(R19_nc$ROW)
R19_nc$Material <- as.factor(R19_nc$Material)
R19_nc$Specie <- as.factor(R19_nc$Specie)
R19_nc$GEN <- as.factor(R19_nc$GEN)
```{r, warning=FALSE}
R19_nc
inspect(R19_nc, plot = FALSE)
#season 2019
R19_nc <- read_excel("C:/Users/Salva/Documents/GitHub/Genomic-Selection/Genomic Selection_SALVA/data/R18_19_20.xlsx",
sheet = "R19_nc",
col_types =
c("text", #ENV
"text", #REP
"text", #BLOCK
"numeric", #ROW
"text", #Material
"text", #Specie
"text", #GEN
"numeric", #GERM
"numeric", #GDD_FF
"numeric", #GDD_F
"numeric", #GDD_FP
"numeric", #GDD_P
"numeric", #GDD_M
"numeric", #Rust
"numeric", #Rust_adj
"numeric", #Biom_pl_g
"numeric" #yield_pl_g
))
R19_nc$ENV <- as.factor(R19_nc$ENV)
R19_nc$REP <- as.factor(R19_nc$REP)
R19_nc$BLOCK <- as.factor(R19_nc$BLOCK)
R19_nc$ROW <- as.factor(R19_nc$ROW)
R19_nc$Material <- as.factor(R19_nc$Material)
R19_nc$Specie <- as.factor(R19_nc$Specie)
R19_nc$GEN <- as.factor(R19_nc$GEN)
inspect(R19_nc, plot = FALSE)
gen_alphaR19 <-
gamem(R19_nc,
GEN,
REP,
resp = c("GERM_adj", "GDD_FF", "GDD_F", "GDD_FP", "GDD_P", "Biom_plant_g", "yield_plant_g", "GDD_M", "Rust", "Rust_adj"),
BLOCK)
get_model_data(gen_alphaR19, "details")
get_model_data(gen_alphaR19, "lrt")
```{r, message=FALSE, warning=FALSE}
get_model_data(gen_alphaR19, "genpar") %>%
print()
par(mfrow=c(1,2))
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 1)
plot(gen_alphaR18,  which = c(2,5), labels = TRUE, var = 4)
par(mfrow=c(1,2))
plot(gen_alphaR19,  which = c(2,5), labels = TRUE, var = 7)
plot(gen_alphaR19,  which = c(2,5), labels = TRUE, var = 8)
par(mfrow=c(1,2))
plot(gen_alphaR19,  which = c(2,5), labels = TRUE, var = 9)
plot(gen_alphaR19,  which = c(2,5), labels = TRUE, var = 10)
plot(gen_alphaR19,  which = c(2,5), labels = TRUE, var = 9)
material19 <- select(R19_nc, c(5,6))
material19 <- material[1:323,1:2]
BLUP19 <- as.data.frame(get_model_data(gen_alphaR19, "blupg"))
BLUP19 <-cbind(BLUP19, material)
material19 <- select(R19_nc, c(5,6))
material19 <- material[1:322,1:2]
BLUP19 <- as.data.frame(get_model_data(gen_alphaR19, "blupg"))
BLUP19 <-cbind(BLUP19, material)
material19 <- material[1:322,1:2]
BLUP19 <- as.data.frame(get_model_data(gen_alphaR19, "blupg"))
BLUP19 <-cbind(BLUP19, material)
material
material[1:322,1:2]
material19
BLUP19 <-cbind(BLUP19, material19)
corr_plot(BLUP19, GDD_FF, GDD_FP, Biom_plant_g, yield_plant_g, GDD_P, Rust, GDD_M, col.by = Material)
ggbetweenstats(x = Material, y = Rust, data = BLUP19,
p.adjust.method = "none", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
ggbetweenstats(x = Material, y = Rust, data = BLUP19,
p.adjust.method = "bonferroni", type = "np",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
ggbetweenstats(x = Material, y = Rust, data = BLUP19,
p.adjust.method = "bonferroni", type = "robust",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
ggbetweenstats(x = Specie, y = Rust, data = BLUP19,
p.adjust.method = "bonferroni", type = "robust",
bf.message = FALSE, var.equal = F,
ggsignif.args = list(textsize = 1.5, tip_length = 0.01)) +
theme(text = element_text(size = 8), plot.subtitle = element_text(size=8))
